name: 🔧 Weekly Maintenance

on:
  schedule:
    - cron: '0 9 * * 1' # 매주 월요일 오전 9시 (UTC)
  workflow_dispatch: # 수동 실행 가능

jobs:
  maintenance:
    name: 🔧 Weekly Maintenance Tasks
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Check for security vulnerabilities
        run: |
          echo "## 🔒 Security Audit Report" >> maintenance-report.md
          npm audit --json > audit.json || true

          if [ -s audit.json ]; then
            vulnerabilities=$(cat audit.json | jq '.metadata.vulnerabilities | to_entries[] | select(.value > 0)')
            if [ ! -z "$vulnerabilities" ]; then
              echo "⚠️ 보안 취약점이 발견되었습니다:" >> maintenance-report.md
              echo "\`\`\`" >> maintenance-report.md
              npm audit >> maintenance-report.md
              echo "\`\`\`" >> maintenance-report.md
            else
              echo "✅ 보안 취약점이 발견되지 않았습니다." >> maintenance-report.md
            fi
          fi

      - name: 📋 Check outdated packages
        run: |
          echo "" >> maintenance-report.md
          echo "## 📦 Outdated Packages" >> maintenance-report.md
          outdated=$(npm outdated --json || echo '{}')

          if [ "$outdated" != "{}" ]; then
            echo "⚠️ 업데이트 가능한 패키지:" >> maintenance-report.md
            echo "\`\`\`" >> maintenance-report.md
            npm outdated >> maintenance-report.md || true
            echo "\`\`\`" >> maintenance-report.md
          else
            echo "✅ 모든 패키지가 최신 버전입니다." >> maintenance-report.md
          fi

      - name: 📊 Generate project stats
        run: |
          echo "" >> maintenance-report.md
          echo "## 📊 Project Statistics" >> maintenance-report.md
          echo "- 총 파일 수: $(find src -name '*.ts' -o -name '*.tsx' | wc -l)" >> maintenance-report.md
          echo "- 컴포넌트 수: $(find src/components -name '*.tsx' | wc -l)" >> maintenance-report.md
          echo "- API 라우트 수: $(find src/api -name 'route.ts' | wc -l)" >> maintenance-report.md
          echo "- 커스텀 훅 수: $(find src/hooks -name '*.ts' | wc -l)" >> maintenance-report.md

      - name: 💬 Comment maintenance report
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');

            if (fs.existsSync('maintenance-report.md')) {
              const report = fs.readFileSync('maintenance-report.md', 'utf8');
              
              // 기존 maintenance 이슈 찾기
              const { data: issues } = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: '🔧 maintenance',
                state: 'open'
              });
              
              const title = `🔧 Weekly Maintenance Report - ${new Date().toISOString().split('T')[0]}`;
              
              if (issues.length > 0) {
                // 기존 이슈에 코멘트 추가
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issues[0].number,
                  body: report
                });
              } else {
                // 새 이슈 생성
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: title,
                  body: report,
                  labels: ['🔧 maintenance']
                });
              }
            }
